{"version":3,"sources":["components/Pages/CartPage.jsx","components/BookListItem.jsx","actions/index.js","utils/compose.js","components/ErrorIndicator.jsx","components/Spinner.jsx","components/BookstoreServiceCooperation.jsx","components/withBookstoreService.jsx","components/BookList.jsx","components/ShoppingCartTable.jsx","components/Pages/HomePage.jsx","components/ShopHeader.jsx","components/App.jsx","store.js","services/BookstoreService.jsx","components/ErrorBoundary.jsx","reducers/bookList.js","reducers/shoppingCart.js","reducers/index.js","index.js"],"names":["CartPage","StyledTextContainer","styled","Container","StyledOrderContainer","StyledAuthor","span","StyledImage","Image","StyledPrice","StyledTitle","h3","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","rounded","Button","onClick","booksLoaded","newBooks","type","payload","booksRequested","booksError","error","bookAddedToCart","bookId","compose","funcs","comp","reduceRight","wrapped","f","ErrorIndicator","Spinner","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","BookList","books","Col","sm","map","StyledCard","key","id","BookListContainer","this","fetchBooks","loading","Component","Card","connect","bookList","dispatch","getBooks","then","data","catch","err","StyledCartButton","StyledCartTotal","StyledTd","td","mapDispatchToProps","onIncrease","onDecrease","onDelete","shoppingCart","items","cartItems","total","orderTotal","Table","bordered","hover","item","idx","count","variant","size","className","StyledBookListWrapper","HomePage","StyledHeader","Row","Link","StyledCart","ShopHeader","numItems","to","timeout","StyledMain","path","component","exact","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","ErrorBoundary","state","hasError","setState","children","updateBookList","action","undefined","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateCartItems","slice","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"8PAMeA,EAJE,WACf,OAAO,2C,u1BCCT,IAiBMC,EAAsBC,YAAOC,IAAPD,CAAH,KAOnBE,EAAuBF,YAAOC,IAAPD,CAAH,KAOpBG,EAAeH,IAAOI,KAAV,KAIZC,EAAcL,YAAOM,IAAPN,CAAH,KAKXO,EAAcP,IAAOI,KAAV,KAOXI,EAAcR,IAAOS,GAAV,KAKFC,EApDM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACpBC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WAC9B,OACE,kBAAC,WAAD,KACE,kBAACX,EAAD,CAAaY,IAAKD,EAAYE,SAAO,IACrC,kBAACnB,EAAD,KACE,kBAACS,EAAD,KAAcK,GACd,kBAACV,EAAD,KAAeW,IAEjB,kBAACZ,EAAD,KACE,kBAACK,EAAD,gBAAkBQ,IAClB,kBAACI,EAAA,EAAD,CAAQC,QAASR,GAAjB,kBCPFS,EAAc,SAACC,GACnB,MAAO,CACLC,KAAM,sBACNC,QAASF,IAIPG,EAAiB,WACrB,MAAO,CACLF,KAAM,wBAIJG,EAAa,SAACC,GAClB,MAAO,CACLJ,KAAM,sBACNC,QAASG,IAIPC,EAAkB,SAACC,GACvB,MAAO,CACLN,KAAM,qBACNC,QAASK,IC3BEC,EAJC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,aAAY,SAACC,EAASC,GAAV,OAAgBA,EAAED,KAAUF,KCKxCI,EAJQ,WACrB,OAAO,wCCGMC,EAJC,WACd,OAAO,4C,ECELC,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,SCWaC,EAZc,kBAAM,SAACC,GAClC,OAAO,SAACC,GACN,OACE,kBAACJ,EAAD,MACG,SAACK,GACA,OAAO,kBAACF,EAAD,iBAAaC,EAAb,CAAoBC,iBAAkBA,W,gHCIvD,IAAMC,EAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOrC,EAAoB,EAApBA,cACzB,OACE,kBAACsC,EAAA,EAAD,CAAKC,GAAI,GACNF,EAAMG,KAAI,SAAAzC,GACT,OACE,kBAAC0C,EAAD,CAAYC,IAAK3C,EAAK4C,IACpB,kBAAC,EAAD,CACE5C,KAAMA,EACNC,cAAe,kBAAMA,EAAcD,EAAK4C,aAShDC,E,kLAEFC,KAAKX,MAAMY,e,+BAGH,IAAD,EAC0CD,KAAKX,MAA9CG,EADD,EACCA,MAAOU,EADR,EACQA,QAAShC,EADjB,EACiBA,MAAOf,EADxB,EACwBA,cAE/B,OAAI+C,EACK,kBAAC,EAAD,MAGLhC,EACK,kBAAC,EAAD,MAGF,kBAAC,EAAD,CAAUsB,MAAOA,EAAOrC,cAAeA,Q,GAhBlBgD,aAoB1BP,EAAarD,YAAO6D,IAAP7D,CAAH,KAgBD8B,IACbc,IACAkB,aAbsB,SAAC,GAA6C,IAAD,IAA1CC,SACzB,MAAO,CAAEd,MAD0D,EAA9BA,MACrBU,QADmD,EAAvBA,QACnBhC,MAD0C,EAAdA,UAI5B,SAACqC,EAAD,GAAqC,IAAxBjB,EAAuB,EAAvBA,iBACtC,MAAO,CACLW,WAAY,kBAAMM,EN5DH,SAACjB,GAAD,OAAsB,kBAAM,SAACiB,GAC9CA,EAASvC,KACTsB,EACGkB,WACAC,MAAK,SAACC,GAAD,OAAUH,EAAS3C,EAAY8C,OACpCC,OAAM,SAACC,GAAD,OAASL,EAAStC,EAAW2C,SMuDTX,CAAWX,EAAXW,KAC3B9C,cAAe,SAAA2C,GAAE,OAAIS,EAASpC,EAAgB2B,SAInCzB,CAGb0B,G,gTCzDF,IA6DMc,GAAmBtE,YAAOmB,IAAPnB,CAAH,MAIhBuE,GAAkBvE,YAAOC,IAAPD,CAAH,KAKfwE,GAAWxE,IAAOyE,GAAV,KAWRC,GAAqB,CACzBC,WAAY/C,EACZgD,WP3D0B,SAAC/C,GAC3B,MAAO,CACLN,KAAM,yBACNC,QAASK,IOyDXgD,SPrD8B,SAAChD,GAC/B,MAAO,CACLN,KAAM,8BACNC,QAASK,KOqDEiC,gBAbS,SAAC,GAAiD,IAAD,IAA9CgB,aACzB,MAAO,CACLC,MAFqE,EAA9BC,UAGvCC,MAHqE,EAAnBC,cAadR,GAAzBZ,EAvFW,SAAC,GAMpB,IALLiB,EAKI,EALJA,MACAE,EAII,EAJJA,MACAN,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAoCA,OACE,kBAAC5E,EAAA,EAAD,KACE,0CACA,kBAACkF,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,GACnB,+BACE,4BACE,iCACA,oCACA,qCACA,qCACA,wCAGJ,+BAAQN,EAAM3B,KA/CF,SAACkC,EAAMC,GAAS,IACxBhC,EAA4B+B,EAA5B/B,GAAI1C,EAAwByE,EAAxBzE,MAAO2E,EAAiBF,EAAjBE,MAAOP,EAAUK,EAAVL,MAC1B,OACE,wBAAI3B,IAAKC,GACP,4BAAKgC,EAAM,GACX,4BAAK1E,GACL,4BAAK2E,GACL,gCAAMP,GACN,kBAACT,GAAD,KACE,kBAACF,GAAD,CACEmB,QAAQ,kBACRC,KAAK,KACLtE,QAAS,kBAAMuD,EAAWpB,KAE1B,uBAAGoC,UAAU,uBAEf,kBAACrB,GAAD,CACEmB,QAAQ,kBACRC,KAAK,KACLtE,QAAS,kBAAMwD,EAAWrB,KAE1B,uBAAGoC,UAAU,wBAEf,kBAACrB,GAAD,CACEmB,QAAQ,iBACRC,KAAK,KACLtE,QAAS,kBAAMyD,EAAStB,KAExB,uBAAGoC,UAAU,0BAqBnB,kBAACpB,GAAD,gBAA0BU,O,uHC5DhC,IASMW,GAAwB5F,YAAOC,IAAPD,CAAH,MAKZ6F,GAdE,WACf,OACE,kBAACD,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,gWCNN,IAYME,GAAe9F,YAAO+F,KAAP/F,CAAH,MAMZQ,GAAcR,YAAOgG,IAAPhG,CAAH,MAKXiG,GAAajG,YAAOgG,IAAPhG,CAAH,MAIDkG,GA3BI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUlB,EAAY,EAAZA,MAC9B,OACE,kBAACa,GAAD,KACE,kBAAC,GAAD,CAAaM,GAAG,KAAhB,mBACA,kBAACH,GAAD,CAAYG,GAAG,SACb,uBAAGT,UAAU,kCACZQ,EAFH,YAEsBlB,EAFtB,O,0FCCN,ICc8BoB,GDFxBC,GAAatG,YAAOC,IAAPD,CAAH,MAID4C,QAhBH,SAAC,GAAyB,EAAvBG,iBACb,OACE,kBAACuD,GAAD,KACE,kBAAC,GAAD,CAAYH,SAAU,EAAGlB,MAAO,KAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsB,KAAK,IAAIC,UAAWX,GAAUY,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAW1G,SEhBlB4G,G,iDACnBvC,KAAO,CACL,CACEZ,GAAI,EACJ1C,MAAO,OACPC,OAAQ,gBACRC,MAAO,GACPC,WACE,4FAEJ,CACEuC,GAAI,EACJ1C,MAAO,aACPC,OAAQ,iBACRC,MAAO,GACPC,WACE,6F,uDAIM,IAAD,OACT,OAAO,IAAI2F,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLC,KAAKC,SAAW,GAClBH,EAAO,IAAII,MAAM,QAEjBL,EAAQ,EAAKzC,QAEd,Y,KCxBY+C,G,4MACnBC,MAAQ,CACNC,UAAU,G,kEAIV3D,KAAK4D,SAAS,CAAED,UAAU,M,+BAI1B,OAAI3D,KAAK0D,MAAMC,SACN,kBAAC,EAAD,MAEF3D,KAAKX,MAAMwE,a,GAbqB1D,a,kBCgC5B2D,GApCQ,SAACJ,EAAOK,GAC7B,QAAcC,IAAVN,EACF,MAAO,CACLlE,MAAO,GACPU,SAAS,EACThC,MAAO,MAIX,OAAQ6F,EAAOjG,MACb,IAAK,sBACH,MAAO,CACL0B,MAAOuE,EAAOhG,QACdmC,SAAS,EACThC,MAAO,MAGX,IAAK,sBACH,MAAO,CACLsB,MAAO,GACPU,SAAS,EACThC,MAAO,MAGX,IAAK,sBACH,MAAO,CACLsB,MAAO,GACPU,SAAS,EACThC,MAAO6F,EAAOhG,SAGlB,QACE,OAAO2F,EAAMpD,W,SChCb2D,GAAc,SAACP,EAAOtF,EAAQ8F,GAAc,IAElC1E,EAEVkE,EAFFpD,SAAYd,MACI+B,EACdmC,EADFrC,aAAgBE,UAEZrE,EAAOsC,EAAM2E,MAAK,qBAAGrE,KAAgB1B,KACrCgG,EAAY7C,EAAU8C,WAAU,qBAAGvE,KAAgB1B,KACnDyD,EAAON,EAAU6C,GAEjBE,EAAUC,GAAerH,EAAM2E,EAAMqC,GAC3C,MAAO,CACLzC,WAAY,EACZF,UAAWiD,GAAgBjD,EAAW+C,EAASF,KAI7CI,GAAkB,SAACjD,EAAWM,EAAMC,GACxC,OAAmB,IAAfD,EAAKE,MACD,GAAN,oBAAWR,EAAUkD,MAAM,EAAG3C,IAA9B,aAAuCP,EAAUkD,MAAM3C,EAAM,MAGlD,IAATA,EACI,GAAN,oBAAWP,GAAX,CAAsBM,IAGlB,GAAN,oBAAWN,EAAUkD,MAAM,EAAG3C,IAA9B,CAAoCD,GAApC,aAA6CN,EAAUkD,MAAM3C,EAAM,MAG/DyC,GAAiB,SAACrH,GAA+B,IAAzB2E,EAAwB,uDAAjB,GAAIqC,EAAa,yCACerC,EAA3D/B,UAD4C,MACvC5C,EAAK4C,GADkC,IACe+B,EAA7CE,aAD8B,MACtB,EADsB,IACeF,EAAlCzE,aADmB,MACXF,EAAKE,MADM,IACeyE,EAAdL,aADD,MACS,EADT,EAGpD,MAAO,CACL1B,KACA1C,QACA2E,MAAOA,EAAQmC,EACf1C,MAAOA,EAAQ0C,EAAWhH,EAAKI,QA8BpBoH,GA1BY,SAAChB,EAAOK,GACjC,QAAcC,IAAVN,EACF,MAAO,CACLnC,UAAW,GACXE,WAAY,GAIhB,OAAQsC,EAAOjG,MACb,IAAK,qBACH,OAAOmG,GAAYP,EAAOK,EAAOhG,QAAS,GAE5C,IAAK,yBACH,OAAOkG,GAAYP,EAAOK,EAAOhG,SAAU,GAE7C,IAAK,8BACH,IAAM8D,EAAO6B,EAAMrC,aAAaE,UAAU4C,MACxC,qBAAGrE,KAAgBiE,EAAOhG,WAE5B,OAAOkG,GAAYP,EAAOK,EAAOhG,SAAU8D,EAAKE,OAElD,QACE,OAAO2B,EAAMrC,eCnDJsD,GAPC,SAACjB,EAAOK,GACtB,MAAO,CACLzD,SAAUwD,GAAeJ,EAAOK,GAChC1C,aAAcqD,GAAmBhB,EAAOK,KLatCa,GAAQC,aACZF,GACAG,aAAgBC,MAXO,kBAAM,SAACC,GAAD,OAAU,SAACjB,GACxC,OACSiB,EADa,kBAAXjB,EACG,CACVjG,KAAMiG,GAGEA,QAXQ,SAAC,GAAD,IAAGkB,EAAH,EAAGA,SAAH,OAAkB,SAACD,GAAD,OAAU,SAACjB,GAEjD,OADAmB,QAAQC,IAAIpB,EAAOjG,KAAMmH,KAClBD,EAAKjB,SAyBda,GAAMrE,UARwBqC,GAQM,KARM,SAACrC,GACzC8C,YAAW,WACT9C,EAAS,CACPzC,KAAM,qBAEP8E,OAKUgC,UMtBTtF,GAAmB,IAAI2D,GAE7BmC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC7F,EAAD,CAA0BuG,MAAOhG,IAC/B,kBAAC,IAAD,KACE,kBAAC,GAAD,UAKRiG,SAASC,eAAe,W","file":"static/js/main.d9d89166.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CartPage = () => {\r\n  return <div>Cart Page</div>;\r\n};\r\n\r\nexport default CartPage;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Container, Image } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book;\r\n  return (\r\n    <Fragment>\r\n      <StyledImage src={coverImage} rounded />\r\n      <StyledTextContainer>\r\n        <StyledTitle>{title}</StyledTitle>\r\n        <StyledAuthor>{author}</StyledAuthor>\r\n      </StyledTextContainer>\r\n      <StyledOrderContainer>\r\n        <StyledPrice>{`$${price}`}</StyledPrice>\r\n        <Button onClick={onAddedToCart}>Add to cart</Button>\r\n      </StyledOrderContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst StyledTextContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst StyledOrderContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst StyledAuthor = styled.span`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst StyledImage = styled(Image)`\r\n  width: 150px;\r\n  height: auto;\r\n`;\r\n\r\nconst StyledPrice = styled.span`\r\n  font-size: 2.5em;\r\n  font-weight: 700;\r\n  margin-bottom: 1rem;\r\n  color: tomato;\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  font-size: 2em;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default BookListItem;\r\n","const fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n  dispatch(booksRequested());\r\n  bookstoreService\r\n    .getBooks()\r\n    .then((data) => dispatch(booksLoaded(data)))\r\n    .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nconst booksLoaded = (newBooks) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_SUCCESS',\r\n    payload: newBooks,\r\n  };\r\n};\r\n\r\nconst booksRequested = () => {\r\n  return {\r\n    type: 'FETCH_BOOKS_REQUEST',\r\n  };\r\n};\r\n\r\nconst booksError = (error) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nconst bookRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_REMOVED_FROM_CART',\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n    payload: bookId,\r\n  };\r\n};\r\n\r\nexport {\r\n  fetchBooks,\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart,\r\n};\r\n","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { BookstoreServiceProvider, BookstoreServiceConsumer };\r\n","import React from \"react\";\r\nimport { BookstoreServiceConsumer } from \"./BookstoreServiceCooperation\";\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {(bookstoreService) => {\r\n          return <Wrapped {...props} bookstoreService={bookstoreService} />;\r\n        }}\r\n      </BookstoreServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withBookstoreService;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport BookListItem from './BookListItem';\r\nimport { fetchBooks, bookAddedToCart } from '../actions';\r\nimport { compose } from '../utils';\r\nimport ErrorIndicator from './ErrorIndicator';\r\nimport Spinner from './Spinner';\r\nimport withBookstoreService from './withBookstoreService';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return (\r\n    <Col sm={9}>\r\n      {books.map(book => {\r\n        return (\r\n          <StyledCard key={book.id}>\r\n            <BookListItem\r\n              book={book}\r\n              onAddedToCart={() => onAddedToCart(book.id)}\r\n            />\r\n          </StyledCard>\r\n        );\r\n      })}\r\n    </Col>\r\n  );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return <BookList books={books} onAddedToCart={onAddedToCart} />;\r\n  }\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  flex-direction: row;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n  return { books, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n  return {\r\n    fetchBooks: () => dispatch(fetchBooks(bookstoreService)()),\r\n    onAddedToCart: id => dispatch(bookAddedToCart(id)),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import React from \"react\";\r\nimport { Button, Container, Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart,\r\n} from \"../actions\";\r\n\r\nconst ShoppingCartTable = ({\r\n  items,\r\n  total,\r\n  onIncrease,\r\n  onDecrease,\r\n  onDelete,\r\n}) => {\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <StyledTd>\r\n          <StyledCartButton\r\n            variant=\"outline-success\"\r\n            size=\"sm\"\r\n            onClick={() => onIncrease(id)}\r\n          >\r\n            <i className=\"fa fa-plus-square\"></i>\r\n          </StyledCartButton>\r\n          <StyledCartButton\r\n            variant=\"outline-warning\"\r\n            size=\"sm\"\r\n            onClick={() => onDecrease(id)}\r\n          >\r\n            <i className=\"fa fa-minus-square\"></i>\r\n          </StyledCartButton>\r\n          <StyledCartButton\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </StyledCartButton>\r\n        </StyledTd>\r\n      </tr>\r\n    );\r\n  };\r\n  return (\r\n    <Container>\r\n      <h2>Your order</h2>\r\n      <Table bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{items.map(renderRow)}</tbody>\r\n      </Table>\r\n      <StyledCartTotal>Total: ${total}</StyledCartTotal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst StyledCartButton = styled(Button)`\r\n  margin: 0.25rem;\r\n`;\r\n\r\nconst StyledCartTotal = styled(Container)`\r\n  text-align: right;\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst StyledTd = styled.td`\r\n  display: flex;\r\n`;\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: allBooksRemovedFromCart,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nimport BookList from \"../BookList\";\r\nimport ShoppingCartTable from \"../ShoppingCartTable\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <StyledBookListWrapper>\r\n      <BookList />\r\n      <ShoppingCartTable />\r\n    </StyledBookListWrapper>\r\n  );\r\n};\r\n\r\nconst StyledBookListWrapper = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <StyledTitle to=\"/\">Redux Bookstore</StyledTitle>\r\n      <StyledCart to=\"/cart\">\r\n        <i className=\"cart-iron fa fa-shopping-cart\" />\r\n        {numItems} items (${total})\r\n      </StyledCart>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nconst StyledHeader = styled(Row)`\r\n  justify-content: space-between;\r\n  margin: 0;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledTitle = styled(Link)`\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nconst StyledCart = styled(Link)`\r\n  color: black;\r\n`;\r\n\r\nexport default ShopHeader;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CartPage from \"./Pages/CartPage\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport ShopHeader from \"./ShopHeader\";\r\nimport withBookstoreService from \"./withBookstoreService\";\r\n\r\nconst App = ({ bookstoreService }) => {\r\n  return (\r\n    <StyledMain>\r\n      <ShopHeader numItems={2} total={35} />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n        <Route path=\"/cart\" component={CartPage} />\r\n      </Switch>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nconst StyledMain = styled(Container)`\r\n  color: black;\r\n`;\r\n\r\nexport default withBookstoreService()(App);\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst logMiddleware = ({ getState }) => (next) => (action) => {\r\n  console.log(action.type, getState());\r\n  return next(action);\r\n};\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n  if (typeof action === 'string') {\r\n    return next({\r\n      type: action,\r\n    });\r\n  }\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware)\r\n);\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: 'DELAYED_ACTION',\r\n    });\r\n  }, timeout);\r\n};\r\n\r\nstore.dispatch(delayedActionCreator(2500));\r\n\r\nexport default store;\r\n","export default class BookstoreService {\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: \"1984\",\r\n      author: \"George Orwell\",\r\n      price: 10,\r\n      coverImage:\r\n        \"https://images-na.ssl-images-amazon.com/images/I/31ijiaTuJzL._SX282_BO1,204,203,200_.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"The Hobbit\",\r\n      author: \"J.R.R. Tolkien\",\r\n      price: 15,\r\n      coverImage:\r\n        \"https://images-na.ssl-images-amazon.com/images/I/51uLvJlKpNL._SX321_BO1,204,203,200_.jpg\",\r\n    },\r\n  ];\r\n\r\n  getBooks() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (Math.random() > 0.9) {\r\n          reject(new Error(\"err\"));\r\n        } else {\r\n          resolve(this.data);\r\n        }\r\n      }, 700);\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ErrorIndicator from \"./ErrorIndicator\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","const updateBookList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"FETCH_BOOKS_SUCCESS\":\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case \"FETCH_BOOKS_REQUEST\":\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null,\r\n      };\r\n\r\n    case \"FETCH_BOOKS_FAILURE\":\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state.bookList;\r\n  }\r\n};\r\n\r\nexport default updateBookList;\r\n","const updateOrder = (state, bookId, quantity) => {\r\n  const {\r\n    bookList: { books },\r\n    shoppingCart: { cartItems },\r\n  } = state;\r\n  const book = books.find(({ id }) => id === bookId);\r\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\r\n  const item = cartItems[itemIndex];\r\n\r\n  const newItem = updateCartItem(book, item, quantity);\r\n  return {\r\n    orderTotal: 0,\r\n    cartItems: updateCartItems(cartItems, newItem, itemIndex),\r\n  };\r\n};\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n  if (item.count === 0) {\r\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)];\r\n  }\r\n\r\n  if (idx === -1) {\r\n    return [...cartItems, item];\r\n  }\r\n\r\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n  const { id = book.id, count = 0, title = book.title, total = 0 } = item;\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: total + quantity * book.price,\r\n  };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0,\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"BOOK_ADDED_TO_CART\":\r\n      return updateOrder(state, action.payload, 1);\r\n\r\n    case \"BOOK_REMOVED_FROM_CART\":\r\n      return updateOrder(state, action.payload, -1);\r\n\r\n    case \"ALL_BOOKS_REMOVED_FROM_CART\":\r\n      const item = state.shoppingCart.cartItems.find(\r\n        ({ id }) => id === action.payload\r\n      );\r\n      return updateOrder(state, action.payload, -item.count);\r\n\r\n    default:\r\n      return state.shoppingCart;\r\n  }\r\n};\r\n\r\nexport default updateShoppingCart;\r\n","import updateBookList from './bookList';\r\nimport updateShoppingCart from './shoppingCart';\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    bookList: updateBookList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action),\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport BookstoreService from \"./services/BookstoreService\";\nimport { BookstoreServiceProvider } from \"./components/BookstoreServiceCooperation\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport store from \"./store\";\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}